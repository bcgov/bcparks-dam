# This workflow will run terraform destroy, which will destroy the infrstructure and the resourcespace instance, INCLUDING ALL DATA

name: terraform destroy

on:
  workflow_dispatch:
    inputs:
      env:
        description: select the environment to destroy
        type: environment
        required: true
      confirmation:
        description: 'Type the words "delete all data"'
        required: true

env:
  TF_VERSION: 1.5.7
  environment: ${{ inputs.env }}

permissions:
  id-token: write # This is required for requesting the JWT
  contents: read # This is required for actions/checkout

jobs:
  terraform:
    runs-on: ubuntu-latest
    environment: ${{ inputs.env }}
    steps:
      - name: validate inputs
        run: |
          if [[ "${{ github.event.inputs.confirmation }}" != "delete all data" ]]; then
            echo '"delete all data" confirmation failed'
            exit 1
          fi

      - name: checkout the repo and building the Backend
        uses: actions/checkout@v3

      - name: print cloud_environment
        run: echo the cloud env is ${{ env.environment }}

      - name: setting variables
        run: |
          cd src/terraform/
          cat <<EOF > dev.auto.tfvars
          target_env = "${{ env.environment }}"
          EOF

      - name: configuring AWS credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          role-to-assume: ${{ vars.TERRAFORM_DEPLOY_ROLE_ARN }}
          aws-region: ca-central-1

      - name: destroying workbc-dam using terraform
        run: |
          cd src/terraform/
          cat <<EOF > backend.tf
          terraform {
            backend "s3" {
              bucket = "${{ vars.S3_BACKEND_NAME }}"
              key = "remote.tfstate-admin"
              region = "ca-central-1"
              dynamodb_table = "${{ vars.S3_BACKEND_NAME }}-lock"
              encrypt = true
            }
          }
          EOF

          terraform init -input=false
          terraform destroy -auto-approve -input=false
